<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.oza.logistic.ssm.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="cn.oza.logistic.ssm.pojo.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="permission_ids" jdbcType="VARCHAR" property="permissionIds" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, rolename, remark, permission_ids
  </sql>
  <select id="selectByExample" parameterType="cn.oza.logistic.ssm.pojo.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.oza.logistic.ssm.pojo.Role">
    insert into t_role (role_id, rolename, remark, 
      permission_ids)
    values (#{roleId,jdbcType=BIGINT}, #{rolename,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{permissionIds,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.oza.logistic.ssm.pojo.Role">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="permissionIds != null">
        permission_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="permissionIds != null">
        #{permissionIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.oza.logistic.ssm.pojo.Role">
    update t_role
    <set>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="permissionIds != null">
        permission_ids = #{permissionIds,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.oza.logistic.ssm.pojo.Role">
    update t_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      permission_ids = #{permissionIds,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>