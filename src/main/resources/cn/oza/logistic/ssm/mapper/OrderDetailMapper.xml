<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.oza.logistic.ssm.mapper.OrderDetailMapper">
  <resultMap id="BaseResultMap" type="cn.oza.logistic.ssm.pojo.OrderDetail">
    <id column="order_detail_id" jdbcType="BIGINT" property="orderDetailId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="goods_unit" jdbcType="BIGINT" property="goodsUnit" />
    <result column="goods_unit_price" jdbcType="DECIMAL" property="goodsUnitPrice" />
    <result column="goods_total" jdbcType="DECIMAL" property="goodsTotal" />
    <result column="goods_remark" jdbcType="VARCHAR" property="goodsRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_detail_id, order_id, goods_name, goods_number, goods_unit, goods_unit_price, 
    goods_total, goods_remark
  </sql>
  <select id="selectByExample" parameterType="cn.oza.logistic.ssm.pojo.OrderDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_orderdetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_orderdetail
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_orderdetail
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.oza.logistic.ssm.pojo.OrderDetail">
    insert into t_orderdetail (order_detail_id, order_id, goods_name, 
      goods_number, goods_unit, goods_unit_price, 
      goods_total, goods_remark)
    values (#{orderDetailId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsNumber,jdbcType=INTEGER}, #{goodsUnit,jdbcType=BIGINT}, #{goodsUnitPrice,jdbcType=DECIMAL}, 
      #{goodsTotal,jdbcType=DECIMAL}, #{goodsRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.oza.logistic.ssm.pojo.OrderDetail">
    insert into t_orderdetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderDetailId != null">
        order_detail_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="goodsUnit != null">
        goods_unit,
      </if>
      <if test="goodsUnitPrice != null">
        goods_unit_price,
      </if>
      <if test="goodsTotal != null">
        goods_total,
      </if>
      <if test="goodsRemark != null">
        goods_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderDetailId != null">
        #{orderDetailId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsUnit != null">
        #{goodsUnit,jdbcType=BIGINT},
      </if>
      <if test="goodsUnitPrice != null">
        #{goodsUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsTotal != null">
        #{goodsTotal,jdbcType=DECIMAL},
      </if>
      <if test="goodsRemark != null">
        #{goodsRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.oza.logistic.ssm.pojo.OrderDetail">
    update t_orderdetail
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsUnit != null">
        goods_unit = #{goodsUnit,jdbcType=BIGINT},
      </if>
      <if test="goodsUnitPrice != null">
        goods_unit_price = #{goodsUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsTotal != null">
        goods_total = #{goodsTotal,jdbcType=DECIMAL},
      </if>
      <if test="goodsRemark != null">
        goods_remark = #{goodsRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.oza.logistic.ssm.pojo.OrderDetail">
    update t_orderdetail
    set order_id = #{orderId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      goods_unit = #{goodsUnit,jdbcType=BIGINT},
      goods_unit_price = #{goodsUnitPrice,jdbcType=DECIMAL},
      goods_total = #{goodsTotal,jdbcType=DECIMAL},
      goods_remark = #{goodsRemark,jdbcType=VARCHAR}
    where order_detail_id = #{orderDetailId,jdbcType=BIGINT}
  </update>
</mapper>