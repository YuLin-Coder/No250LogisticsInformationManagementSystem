<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.oza.logistic.ssm.mapper.InfoMapper">
  <resultMap id="BaseResultMap" type="cn.oza.logistic.ssm.pojo.Info">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="total_volume" jdbcType="DOUBLE" property="totalVolume" />
    <result column="total_weight" jdbcType="DOUBLE" property="totalWeight" />
    <result column="total_value" jdbcType="DOUBLE" property="totalValue" />
    <result column="tax_rate" jdbcType="DOUBLE" property="taxRate" />
    <result column="weight_fee" jdbcType="DOUBLE" property="weightFee" />
    <result column="volume_fee" jdbcType="DOUBLE" property="volumeFee" />
    <result column="tax_fee" jdbcType="DOUBLE" property="taxFee" />
    <result column="total_fee" jdbcType="DOUBLE" property="totalFee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, total_volume, total_weight, total_value, tax_rate, weight_fee, volume_fee, 
    tax_fee, total_fee
  </sql>
  <select id="selectByExample" parameterType="cn.oza.logistic.ssm.pojo.InfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_info
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_info
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.oza.logistic.ssm.pojo.Info">
    insert into t_info (order_id, total_volume, total_weight, 
      total_value, tax_rate, weight_fee, 
      volume_fee, tax_fee, total_fee
      )
    values (#{orderId,jdbcType=BIGINT}, #{totalVolume,jdbcType=DOUBLE}, #{totalWeight,jdbcType=DOUBLE}, 
      #{totalValue,jdbcType=DOUBLE}, #{taxRate,jdbcType=DOUBLE}, #{weightFee,jdbcType=DOUBLE}, 
      #{volumeFee,jdbcType=DOUBLE}, #{taxFee,jdbcType=DOUBLE}, #{totalFee,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.oza.logistic.ssm.pojo.Info">
    insert into t_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="totalVolume != null">
        total_volume,
      </if>
      <if test="totalWeight != null">
        total_weight,
      </if>
      <if test="totalValue != null">
        total_value,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="weightFee != null">
        weight_fee,
      </if>
      <if test="volumeFee != null">
        volume_fee,
      </if>
      <if test="taxFee != null">
        tax_fee,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="totalVolume != null">
        #{totalVolume,jdbcType=DOUBLE},
      </if>
      <if test="totalWeight != null">
        #{totalWeight,jdbcType=DOUBLE},
      </if>
      <if test="totalValue != null">
        #{totalValue,jdbcType=DOUBLE},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DOUBLE},
      </if>
      <if test="weightFee != null">
        #{weightFee,jdbcType=DOUBLE},
      </if>
      <if test="volumeFee != null">
        #{volumeFee,jdbcType=DOUBLE},
      </if>
      <if test="taxFee != null">
        #{taxFee,jdbcType=DOUBLE},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.oza.logistic.ssm.pojo.Info">
    update t_info
    <set>
      <if test="totalVolume != null">
        total_volume = #{totalVolume,jdbcType=DOUBLE},
      </if>
      <if test="totalWeight != null">
        total_weight = #{totalWeight,jdbcType=DOUBLE},
      </if>
      <if test="totalValue != null">
        total_value = #{totalValue,jdbcType=DOUBLE},
      </if>
      <if test="taxRate != null">
        tax_rate = #{taxRate,jdbcType=DOUBLE},
      </if>
      <if test="weightFee != null">
        weight_fee = #{weightFee,jdbcType=DOUBLE},
      </if>
      <if test="volumeFee != null">
        volume_fee = #{volumeFee,jdbcType=DOUBLE},
      </if>
      <if test="taxFee != null">
        tax_fee = #{taxFee,jdbcType=DOUBLE},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=DOUBLE},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.oza.logistic.ssm.pojo.Info">
    update t_info
    set total_volume = #{totalVolume,jdbcType=DOUBLE},
      total_weight = #{totalWeight,jdbcType=DOUBLE},
      total_value = #{totalValue,jdbcType=DOUBLE},
      tax_rate = #{taxRate,jdbcType=DOUBLE},
      weight_fee = #{weightFee,jdbcType=DOUBLE},
      volume_fee = #{volumeFee,jdbcType=DOUBLE},
      tax_fee = #{taxFee,jdbcType=DOUBLE},
      total_fee = #{totalFee,jdbcType=DOUBLE}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>