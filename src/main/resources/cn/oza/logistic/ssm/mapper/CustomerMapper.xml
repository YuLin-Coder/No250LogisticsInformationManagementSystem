<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.oza.logistic.ssm.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="cn.oza.logistic.ssm.pojo.Customer">
    <id column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="location_id" jdbcType="BIGINT" property="locationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    customer_id, customer_name, phone, email, address, gender, remark, id_card, user_id, 
    location_id
  </sql>
  <select id="selectByExample" parameterType="cn.oza.logistic.ssm.pojo.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_customer
    where customer_id = #{customerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_customer
    where customer_id = #{customerId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.oza.logistic.ssm.pojo.Customer">
    insert into t_customer (customer_id, customer_name, phone, 
      email, address, gender, 
      remark, id_card, user_id, 
      location_id)
    values (#{customerId,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{locationId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.oza.logistic.ssm.pojo.Customer">
    insert into t_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.oza.logistic.ssm.pojo.Customer">
    update t_customer
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=BIGINT},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.oza.logistic.ssm.pojo.Customer">
    update t_customer
    set customer_name = #{customerName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      location_id = #{locationId,jdbcType=BIGINT}
    where customer_id = #{customerId,jdbcType=BIGINT}
  </update>
</mapper>